From bde42256045e95e51592393168076abb5ba21c26 Mon Sep 17 00:00:00 2001
From: Heinrich Schuchardt <xypron.glpk@gmx.de>
Date: Sun, 30 Jul 2017 15:52:37 +0200
Subject: [PATCH] efi_loader: write protocol GUID in OpenProtocol

To understand what happens in OpenProtocol it is necessary to know
the protocol interface GUID. Let's write a debug message.

Using uuid_guid_get_str would be quite clumsy for this purpose.
This would involve evaluating _DEBUG which probably should not be used
outside common.h.

Signed-off-by: Heinrich Schuchardt <xypron.glpk@gmx.de>
Reviewed-by: Rob Clark <robdclark@gmail.com>
---
 include/efi_loader.h          | 7 +++++++
 lib/efi_loader/efi_boottime.c | 6 ++++++
 2 files changed, 13 insertions(+)

diff --git a/include/efi_loader.h b/include/efi_loader.h
index cfcabb0ae1..c61cadbd61 100644
--- a/include/efi_loader.h
+++ b/include/efi_loader.h
@@ -63,6 +63,13 @@ const char *__efi_nesting_dec(void);
 	debug("%sEFI: Return From: %s\n", __efi_nesting_dec(), #exp); \
 	} while(0)
 
+/*
+ * Write GUID
+ */
+#define EFI_PRINT_GUID(txt, guid) ({ \
+	debug("EFI: %s %pUl\n", txt, guid); \
+	})
+
 extern struct efi_runtime_services efi_runtime_services;
 extern struct efi_system_table systab;
 
diff --git a/lib/efi_loader/efi_boottime.c b/lib/efi_loader/efi_boottime.c
index 5aeaeeca75..6b92971d49 100644
--- a/lib/efi_loader/efi_boottime.c
+++ b/lib/efi_loader/efi_boottime.c
@@ -963,6 +963,8 @@ static efi_status_t EFIAPI efi_close_protocol(void *handle,
 		goto out;
 	}
 
+	EFI_PRINT_GUID("protocol", protocol);
+
 	list_for_each_entry(efiobj, &efi_obj_list, link) {
 		if (efiobj->handle != handle)
 			continue;
@@ -1163,6 +1165,8 @@ static efi_status_t EFIAPI efi_locate_protocol(efi_guid_t *protocol,
 	if (!protocol || !protocol_interface)
 		return EFI_EXIT(EFI_INVALID_PARAMETER);
 
+	EFI_PRINT_GUID("protocol", protocol);
+
 	list_for_each(lhandle, &efi_obj_list) {
 		struct efi_object *efiobj;
 
@@ -1366,6 +1370,8 @@ static efi_status_t EFIAPI efi_open_protocol(
 		goto out;
 	}
 
+	EFI_PRINT_GUID("protocol", protocol);
+
 	switch (attributes) {
 	case EFI_OPEN_PROTOCOL_BY_HANDLE_PROTOCOL:
 	case EFI_OPEN_PROTOCOL_GET_PROTOCOL:
-- 
2.14.1

