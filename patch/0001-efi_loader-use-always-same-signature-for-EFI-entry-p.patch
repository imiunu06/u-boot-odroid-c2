From c0188e79354272cd7c8eccffefbb6a6b5c46ce56 Mon Sep 17 00:00:00 2001
From: Heinrich Schuchardt <xypron.glpk@gmx.de>
Date: Tue, 23 Jan 2018 22:57:21 +0100
Subject: [PATCH 1/1] efi_loader: use always same signature for EFI entry point

The signature of the EFI entry point should always be the same:

	efi_status_t EFIAPI (*entry)(efi_handle_t image_handle,
				     struct efi_system_table *st);

For printing the address of the entry point use %p.

Signed-off-by: Heinrich Schuchardt <xypron.glpk@gmx.de>
---
 cmd/bootefi.c                 | 12 ++++++------
 lib/efi_loader/efi_boottime.c |  4 ++--
 2 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/cmd/bootefi.c b/cmd/bootefi.c
index 51213c0..1b9a8c3 100644
--- a/cmd/bootefi.c
+++ b/cmd/bootefi.c
@@ -126,8 +126,9 @@ static void *copy_fdt(void *fdt)
 
 static efi_status_t efi_do_enter(
 			efi_handle_t image_handle, struct efi_system_table *st,
-			asmlinkage ulong (*entry)(efi_handle_t image_handle,
-						  struct efi_system_table *st))
+			efi_status_t EFIAPI (*entry)(
+					efi_handle_t image_handle,
+					struct efi_system_table *st))
 {
 	efi_status_t ret = EFI_LOAD_ERROR;
 
@@ -138,7 +139,7 @@ static efi_status_t efi_do_enter(
 }
 
 #ifdef CONFIG_ARM64
-static efi_status_t efi_run_in_el2(asmlinkage ulong (*entry)(
+static efi_status_t efi_run_in_el2(efi_status_t EFIAPI (*entry)(
 			efi_handle_t image_handle, struct efi_system_table *st),
 			efi_handle_t image_handle, struct efi_system_table *st)
 {
@@ -162,8 +163,7 @@ static efi_status_t do_bootefi_exec(void *efi, void *fdt,
 	struct efi_device_path *memdp = NULL;
 	ulong ret;
 
-	ulong (*entry)(efi_handle_t image_handle, struct efi_system_table *st)
-		asmlinkage;
+	efi_status_t EFIAPI (*entry)(efi_handle_t image_handle, struct efi_system_table *st);
 	ulong fdt_pages, fdt_size, fdt_start, fdt_end;
 	const efi_guid_t fdt_guid = EFI_FDT_GUID;
 	bootm_headers_t img = { 0 };
@@ -243,7 +243,7 @@ static efi_status_t do_bootefi_exec(void *efi, void *fdt,
 		"{ro,boot}(blob)0000000000000000");
 
 	/* Call our payload! */
-	debug("%s:%d Jumping to 0x%lx\n", __func__, __LINE__, (long)entry);
+	debug("%s:%d Jumping to 0x%p\n", __func__, __LINE__, entry);
 
 	if (setjmp(&loaded_image_info.exit_jmp)) {
 		ret = loaded_image_info.exit_status;
diff --git a/lib/efi_loader/efi_boottime.c b/lib/efi_loader/efi_boottime.c
index 39d8511..0ac5b44 100644
--- a/lib/efi_loader/efi_boottime.c
+++ b/lib/efi_loader/efi_boottime.c
@@ -1534,8 +1534,8 @@ static efi_status_t EFIAPI efi_start_image(efi_handle_t image_handle,
 					   unsigned long *exit_data_size,
 					   s16 **exit_data)
 {
-	asmlinkage ulong (*entry)(efi_handle_t image_handle,
-				  struct efi_system_table *st);
+	efi_status_t EFIAPI (*entry)(efi_handle_t image_handle,
+				     struct efi_system_table *st);
 	struct efi_loaded_image *info = image_handle;
 	efi_status_t ret;
 
-- 
2.7.4

