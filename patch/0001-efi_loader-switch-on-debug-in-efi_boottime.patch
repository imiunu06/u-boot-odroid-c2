From 6331ae69977ceebd44d32073f93622e5aad574a3 Mon Sep 17 00:00:00 2001
From: Heinrich Schuchardt <xypron.glpk@gmx.de>
Date: Sat, 1 Jul 2017 22:46:44 +0200
Subject: [PATCH 1/1] efi_loader: switch on debug in efi_boottime

Signed-off-by: Heinrich Schuchardt <xypron.glpk@gmx.de>
---
 cmd/bootefi.c                 |  2 ++
 lib/efi_loader/efi_boottime.c | 11 +++++++++++
 lib/efi_loader/efi_gop.c      |  2 ++
 lib/efi_loader/efi_net.c      | 10 ++++++++++
 4 files changed, 25 insertions(+)

diff --git a/cmd/bootefi.c b/cmd/bootefi.c
index d1d8b00083..9be01eb569 100644
--- a/cmd/bootefi.c
+++ b/cmd/bootefi.c
@@ -6,6 +6,8 @@
  *  SPDX-License-Identifier:     GPL-2.0+
  */
 
+#define DEBUG 1
+
 #include <common.h>
 #include <command.h>
 #include <dm.h>
diff --git a/lib/efi_loader/efi_boottime.c b/lib/efi_loader/efi_boottime.c
index 1e621b8d01..2ead9a57a2 100644
--- a/lib/efi_loader/efi_boottime.c
+++ b/lib/efi_loader/efi_boottime.c
@@ -16,6 +16,9 @@
 #include <inttypes.h>
 #include <watchdog.h>
 
+#undef _DEBUG
+#define _DEBUG 1
+
 DECLARE_GLOBAL_DATA_PTR;
 
 /* This list contains all the EFI objects our payload has access to */
@@ -157,6 +160,8 @@ static u64 efi_div10(u64 a)
 	return ret;
 }
 
+#undef _DEBUG
+#define _DEBUG 0
 void efi_signal_event(struct efi_event *event)
 {
 	if (event->signaled)
@@ -167,6 +172,8 @@ void efi_signal_event(struct efi_event *event)
 						     event->notify_context));
 	}
 }
+#undef _DEBUG
+#define _DEBUG 1
 
 static efi_status_t efi_unsupported(const char *funcname)
 {
@@ -456,6 +463,8 @@ static efi_status_t EFIAPI efi_close_event(struct efi_event *event)
 	return EFI_EXIT(EFI_INVALID_PARAMETER);
 }
 
+#undef _DEBUG
+#define _DEBUG 0
 static efi_status_t EFIAPI efi_check_event(struct efi_event *event)
 {
 	int i;
@@ -473,6 +482,8 @@ static efi_status_t EFIAPI efi_check_event(struct efi_event *event)
 	}
 	return EFI_EXIT(EFI_INVALID_PARAMETER);
 }
+#undef _DEBUG
+#define _DEBUG 1
 
 static efi_status_t efi_search_protocol(void *handle,
 					const efi_guid_t *protocol_guid,
diff --git a/lib/efi_loader/efi_gop.c b/lib/efi_loader/efi_gop.c
index 5655a76aad..c3d955f5ed 100644
--- a/lib/efi_loader/efi_gop.c
+++ b/lib/efi_loader/efi_gop.c
@@ -6,6 +6,8 @@
  *  SPDX-License-Identifier:     GPL-2.0+
  */
 
+#define DEBUG 1
+
 #include <common.h>
 #include <dm.h>
 #include <efi_loader.h>
diff --git a/lib/efi_loader/efi_net.c b/lib/efi_loader/efi_net.c
index 853f2a324f..6144d60123 100644
--- a/lib/efi_loader/efi_net.c
+++ b/lib/efi_loader/efi_net.c
@@ -6,6 +6,8 @@
  *  SPDX-License-Identifier:     GPL-2.0+
  */
 
+#define DEBUG 1
+
 #include <common.h>
 #include <efi_loader.h>
 #include <inttypes.h>
@@ -124,6 +126,8 @@ static efi_status_t EFIAPI efi_net_nvdata(struct efi_simple_network *this,
 	return EFI_EXIT(EFI_UNSUPPORTED);
 }
 
+#undef _DEBUG
+#define _DEBUG 0
 static efi_status_t EFIAPI efi_net_get_status(struct efi_simple_network *this,
 					      u32 *int_status, void **txbuf)
 {
@@ -139,6 +143,8 @@ static efi_status_t EFIAPI efi_net_get_status(struct efi_simple_network *this,
 
 	return EFI_EXIT(EFI_SUCCESS);
 }
+#undef _DEBUG
+#define _DEBUG 1
 
 static efi_status_t EFIAPI efi_net_transmit(struct efi_simple_network *this,
 		ulong header_size, ulong buffer_size, void *buffer,
@@ -171,6 +177,8 @@ static void efi_net_push(void *pkt, int len)
 	new_rx_packet = true;
 }
 
+#undef _DEBUG
+#define _DEBUG 0
 static efi_status_t EFIAPI efi_net_receive(struct efi_simple_network *this,
 		ulong *header_size, ulong *buffer_size, void *buffer,
 		struct efi_mac_address *src_addr,
@@ -198,6 +206,8 @@ static efi_status_t EFIAPI efi_net_receive(struct efi_simple_network *this,
 
 	return EFI_EXIT(EFI_SUCCESS);
 }
+#undef _DEBUG
+#define _DEBUG 1
 
 void efi_net_set_dhcp_ack(void *pkt, int len)
 {
-- 
2.14.1

