From fcfb6fe608b7b2ab7e5bd1f1887f30d6ed541f9e Mon Sep 17 00:00:00 2001
From: Heinrich Schuchardt <xypron.glpk@gmx.de>
Date: Tue, 1 Aug 2017 08:00:01 +0200
Subject: [PATCH 1/1] efi_loader: implement ConnectController

Signed-off-by: Heinrich Schuchardt <xypron.glpk@gmx.de>
---
 lib/efi_loader/efi_boottime.c | 76 ++++++++++++++++++++++++++++++++++++++++---
 1 file changed, 72 insertions(+), 4 deletions(-)

diff --git a/lib/efi_loader/efi_boottime.c b/lib/efi_loader/efi_boottime.c
index ed8908002b..a92b0bde61 100644
--- a/lib/efi_loader/efi_boottime.c
+++ b/lib/efi_loader/efi_boottime.c
@@ -909,9 +912,74 @@ static efi_status_t EFIAPI efi_connect_controller(
 			struct efi_device_path *remain_device_path,
 			bool recursive)
 {
+	efi_handle_t *driver_image_handle_override = NULL;
+	efi_status_t r;
+	UINTN buffer_size = 0;
+	struct efi_driver_family_override_protocol
+			*driver_family_override_protocol;
+	struct efi_platform_driver_override_protocol
+			*platform_driver_override_protocol;
+
+	if (!controller_handle)
+	return EFI_INVALID_PARAMETER;
+
+	/*  Context Override */
+	if (driver_image_handle) {
+		for (;driver_image_handle; ++driver_image_handle) {
+			/* Call the registration stuff here. */
+		}
+	}
+	/*  Platform Driver Override */
+	r = efi_locate_protocol(
+			&efi_platform_driver_override_protocol_guid,
+			NULL,
+			(void **) &driver_family_override_protocol);
+	do {
+	r = platform_driver_override_protocol->get_driver(
+		platform_driver_override_protocol,
+		controller_handle,
+		(void **) &driver_image_handle_override);
+		/* Call the registration stuff here. */
+	} while (r == EFI_SUCCESS);
+	}
+	/* Driver Family Override Search */
+	r = efi_locate_handle(
+			by_protocol,
+			&efi_driver_family_override_protocol_guid,
+			NULL,
+			&count;
+			(void *) driver_family_override_protocol);
+	if (r == EFI_SUCCESS) {
+		do {
+		r = driver_family_override_protocol->get_driver(
+			family_driver_override_protocol,
+			controller_handle,
+			driver_image_handle_override);
+			/* Call the registration stuff here. */
+		} while (r == EFI_SUCCESS);
+	}
+	/* Driver Family Override Search */
+
+	/* Bus Specific Driver Override */
+
+	/* Driver Binding Search */
+
+	return EFI_NOT_FOUND;
+}
+
+static efi_status_t EFIAPI efi_connect_controller_ext(
+			efi_handle_t controller_handle,
+			efi_handle_t *driver_image_handle,
+			struct efi_device_path *remain_device_path,
+			bool recursive)
+{
 	EFI_ENTRY("%p, %p, %p, %d", controller_handle, driver_image_handle,
 		  remain_device_path, recursive);
-	return EFI_EXIT(EFI_NOT_FOUND);
+
+	return EFI_EXIT(efi_connect_controller(controller_handle,
+					       driver_image_handle,
+					       remain_device_path,
+					       recursive));
 }
 
 static efi_status_t EFIAPI efi_disconnect_controller(void *controller_handle,
@@ -1494,7 +1562,7 @@ static const struct efi_boot_services efi_boot_services = {
 	.get_next_monotonic_count = efi_get_next_monotonic_count,
 	.stall = efi_stall,
 	.set_watchdog_timer = efi_set_watchdog_timer,
-	.connect_controller = efi_connect_controller,
+	.connect_controller = efi_connect_controller_ext,
 	.disconnect_controller = efi_disconnect_controller_ext,
 	.open_protocol = efi_open_protocol,
 	.close_protocol = efi_close_protocol,
-- 
2.13.2

