From d39b382674f551f07d4ee12b36581310f1c5e67f Mon Sep 17 00:00:00 2001
From: Heinrich Schuchardt <xypron.glpk@gmx.de>
Date: Mon, 25 Dec 2017 05:47:24 +0100
Subject: [PATCH 1/1] efi_loader: make efi_disk_create_partitions a global
 symbol

Up to now we have been using efi_disk_create_partitions() to create
partions for block device that existed before starting an EFI
application.

We need to to call it for for block devices created by EFI
applications at run time. So let's make it a global symbol.

Signed-off-by: Heinrich Schuchardt <xypron.glpk@gmx.de>
---
 include/efi_loader.h      |  3 +++
 lib/efi_loader/efi_disk.c | 15 +++++++++++----
 2 files changed, 14 insertions(+), 4 deletions(-)

diff --git a/include/efi_loader.h b/include/efi_loader.h
index 54de58ad37..0188a57bb1 100644
--- a/include/efi_loader.h
+++ b/include/efi_loader.h
@@ -176,6 +176,9 @@ extern struct list_head efi_obj_list;
 int efi_console_register(void);
 /* Called by bootefi to make all disk storage accessible as EFI objects */
 int efi_disk_register(void);
+/* Create handles and protocols for the partions of a block device */
+int efi_disk_create_partitions(struct blk_desc *desc, const char *if_typename,
+			       int diskid, const char *pdevname);
 /* Called by bootefi to make GOP (graphical) interface available */
 int efi_gop_register(void);
 /* Called by bootefi to make the network interface available */
diff --git a/lib/efi_loader/efi_disk.c b/lib/efi_loader/efi_disk.c
index ff8f1230aa..d1422cfb71 100644
--- a/lib/efi_loader/efi_disk.c
+++ b/lib/efi_loader/efi_disk.c
@@ -266,10 +266,17 @@ out_of_memory:
 	printf("ERROR: Out of memory\n");
 }
 
-static int efi_disk_create_partitions(struct blk_desc *desc,
-				      const char *if_typename,
-				      int diskid,
-				      const char *pdevname)
+/*
+ * Create handles and protocols for the partions of a block device
+ *
+ * @blk_desc		block device
+ * @if_typename		interface type
+ * @diskid		device number
+ * @pdevname		device name
+ * @return		number of partions created
+ */
+int efi_disk_create_partitions(struct blk_desc *desc, const char *if_typename,
+			       int diskid, const char *pdevname)
 {
 	int disks = 0;
 	char devname[32] = { 0 }; /* dp->str is u16[32] long */
-- 
2.15.1

