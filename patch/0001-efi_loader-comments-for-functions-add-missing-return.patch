From d8cd95abefa447a14cdef57cf675faef1764e606 Mon Sep 17 00:00:00 2001
From: Heinrich Schuchardt <xypron.glpk@gmx.de>
Date: Fri, 6 Oct 2017 12:55:13 +0200
Subject: [PATCH 1/1] efi_loader: comments for functions add missing @return

For some functions the @return description is missing.

Fix typo.

Signed-off-by: Heinrich Schuchardt <xypron.glpk@gmx.de>
---
 lib/efi_loader/efi_boottime.c | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/lib/efi_loader/efi_boottime.c b/lib/efi_loader/efi_boottime.c
index 976d5822f7..73d9f3c4c3 100644
--- a/lib/efi_loader/efi_boottime.c
+++ b/lib/efi_loader/efi_boottime.c
@@ -611,6 +611,7 @@ out:
  * notification function for execution.
  *
  * @event	event to signal
+ * @return	status code
  */
 static efi_status_t EFIAPI efi_signal_event_ext(struct efi_event *event)
 {
@@ -1120,7 +1121,7 @@ static efi_status_t EFIAPI efi_install_configuration_table_ext(efi_guid_t *guid,
  * Initialize a loaded_image_info + loaded_image_info object with correct
  * protocols, boot-device, etc.
  *
- * @info		loaded image info to be passed to the enty point of the
+ * @info		loaded image info to be passed to the entry point of the
  *			image
  * @obj			internal object associated with the loaded image
  * @device_path		device path of the loaded image
@@ -1164,6 +1165,7 @@ void efi_setup_loaded_image(struct efi_loaded_image *info, struct efi_object *ob
  *
  * @file_path		the path of the image to load
  * @buffer		buffer containing the loaded image
+ * @return		status code
  */
 efi_status_t efi_load_image_from_path(struct efi_device_path *file_path,
 				      void **buffer)
@@ -1285,6 +1287,7 @@ static efi_status_t EFIAPI efi_load_image(bool boot_policy,
  * @image_handle	handle of the image
  * @exit_data_size	size of the buffer
  * @exit_data		buffer to receive the exit data of the called image
+ * @return		status code
  */
 static efi_status_t EFIAPI efi_start_image(efi_handle_t image_handle,
 					   unsigned long *exit_data_size,
@@ -1325,6 +1328,7 @@ static efi_status_t EFIAPI efi_start_image(efi_handle_t image_handle,
  * @exit_status		status code
  * @exit_data_size	size of the buffer in bytes
  * @exit_data		buffer with data describing an error
+ * @return		status code
  */
 static efi_status_t EFIAPI efi_exit(efi_handle_t image_handle,
 			efi_status_t exit_status, unsigned long exit_data_size,
@@ -1499,6 +1503,7 @@ static efi_status_t EFIAPI efi_stall(unsigned long microseconds)
  * @watchdog_code	code to be logged when resetting
  * @data_size		size of buffer in bytes
  * @watchdog_data	buffer with data describing the reset reason
+ * @return		status code
  */
 static efi_status_t EFIAPI efi_set_watchdog_timer(unsigned long timeout,
 						  uint64_t watchdog_code,
@@ -1611,6 +1616,7 @@ static efi_status_t EFIAPI efi_open_protocol_information(efi_handle_t handle,
  * @handle			handle for which the information is retrieved
  * @protocol_buffer		buffer with protocol GUIDs
  * @protocol_buffer_count	number of entries in the buffer
+ * @return			status code
  */
 static efi_status_t EFIAPI efi_protocols_per_handle(void *handle,
 			efi_guid_t ***protocol_buffer,
@@ -1722,6 +1728,7 @@ out:
  * @protocol		GUID of the protocol
  * @registration	registration key passed to the notification function
  * @protocol_interface	interface implementing the protocol
+ * @return		status code
  */
 static efi_status_t EFIAPI efi_locate_protocol(const efi_guid_t *protocol,
 					       void *registration,
-- 
2.14.1

