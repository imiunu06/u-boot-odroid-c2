From 3aacf02486df9f0c0314bf1a062cddab5bc5c7b2 Mon Sep 17 00:00:00 2001
From: Heinrich Schuchardt <xypron.glpk@gmx.de>
Date: Sat, 24 Jun 2017 15:29:15 +0200
Subject: [PATCH 1/1] bootefi: allow return without EFI_BOOT_SERVICES.Exit

The Unified Extensible Firmware Interface Specification, version 2.7,
defines in chapter 2.1.2 - UEFI Application that an EFI application may
either directly return or call EFI_BOOT_SERVICES.Exit().

Unfortunately U-Boot makes the incorrect assumption that
EFI_BOOT_SERVICES.Exit() is always called.

So the following application leads to a memory exception on the aarch64
architecture when returning:

EFI_STATUS efi_main(
  EFI_HANDLE handle,
  EFI_SYSTEM_TABlE systable) {
	return EFI_SUCCESS;
}

With this patch the entry point is stored in the image handle.

The new wrapper function do_enter is used to call the EFI entry point.

Cc: Alexander Graf <agraf@suse.de>
Signed-off-by: Heinrich Schuchardt <xypron.glpk@gmx.de>
---
v3:
	change sequence of arguments for efi_do_enter to save 12
	bytes of object code on armv8 as suggested by alexander.

	scripts/checkpatch.pl unfortunately shows an incorrect warning
	"storage class should be at the beginning of the declaration".
	asmlinkage is at the beginning of the parameter.
v2:
	do not store entry in loaded_image_info but use additonal
	function parameter as suggested by Alexander
---

 cmd/bootefi.c | 22 +++++++++++++++++-----
 1 file changed, 17 insertions(+), 5 deletions(-)

diff --git a/cmd/bootefi.c b/cmd/bootefi.c
index 771300ee94..4df468307c 100644
--- a/cmd/bootefi.c
+++ b/cmd/bootefi.c
@@ -147,15 +147,27 @@ static void *copy_fdt(void *fdt)
 	return new_fdt;
 }
 
+static asmlinkage ulong efi_do_enter(void *image_handle,
+			struct efi_system_table *st, asmlinkage ulong (*entry)(
+			void *image_handle, struct efi_system_table *st))
+{
+	efi_status_t ret = EFI_LOAD_ERROR;
+
+	if (entry)
+		ret = entry(image_handle, st);
+	st->boottime->exit(image_handle, ret, 0 , NULL);
+	return ret;
+}
+
 #ifdef CONFIG_ARM64
-static unsigned long efi_run_in_el2(ulong (*entry)(void *image_handle,
-		struct efi_system_table *st), void *image_handle,
-		struct efi_system_table *st)
+static unsigned long efi_run_in_el2(asmlinkage ulong (*entry)(
+			void *image_handle, struct efi_system_table *st),
+			void *image_handle, struct efi_system_table *st)
 {
 	/* Enable caches again */
 	dcache_enable();
 
-	return entry(image_handle, st);
+	return efi_do_enter(image_handle, st, entry);
 }
 #endif
 
@@ -260,7 +272,7 @@ static unsigned long do_bootefi_exec(void *efi, void *fdt)
 	}
 #endif
 
-	return entry(&loaded_image_info, &systab);
+	return efi_do_enter(&loaded_image_info, &systab, entry);
 }
 
 
-- 
2.11.0

