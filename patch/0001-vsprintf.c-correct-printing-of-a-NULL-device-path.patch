From 5c556bccdbdfbb8a43ab8ca4269123ca349e55fa Mon Sep 17 00:00:00 2001
From: Heinrich Schuchardt <xypron.glpk@gmx.de>
Date: Fri, 26 Jan 2018 05:37:22 +0100
Subject: [PATCH 1/1] vsprintf.c: correct printing of a NULL device path

When printing '%pD' with a value of NULL we want to output
'<NULL>'. But this requires copying to buf. Leave this
to string16.

A unit test is supplied which relies on EFI support in the sandbox.

The development for EFI support in the sandbox is currently in branch
u-boot-dm/efi-working. The branch lacks commit 6ea8b580f06b ("efi_loader:
correct DeviceNodeToText for media types"). Ater rebasing the aforementioned
branch on U-Boot v2018.01 and adding 256060e4257a2 and this patch the test
is executed successfully.

Fixes: 256060e4257a2 (vsprintf.c: add EFI device path printing)
Signed-off-by: Heinrich Schuchardt <xypron.glpk@gmx.de>
---
Alex, could you pick this up for the efi-next tree, please.
---
 lib/vsprintf.c                | 3 ++-
 test/print_ut.c               | 4 ++++
 2 files changed, 6 insertions(+), 1 deletion(-)

diff --git a/lib/vsprintf.c b/lib/vsprintf.c
index 226f4eb3e5..5f7a5f17dc 100644
--- a/lib/vsprintf.c
+++ b/lib/vsprintf.c
@@ -300,8 +300,9 @@ static char *device_path_string(char *buf, char *end, void *dp, int field_width,
 {
 	u16 *str;
 
+	/* If dp == NULL output the string '<NULL>' */
 	if (!dp)
-		return "<NULL>";
+		return string16(buf, end, dp, field_width, precision, flags);
 
 	str = efi_dp_str((struct efi_device_path *)dp);
 	if (!str)
diff --git a/test/print_ut.c b/test/print_ut.c
index 1aa68be7a9..d8e9da8fa8 100644
--- a/test/print_ut.c
+++ b/test/print_ut.c
@@ -44,6 +44,10 @@ static void efi_ut_print(void)
 
 	snprintf(str, sizeof(str), "_%pD_", buf);
 	assert(!strcmp("_/SD(3)_", str));
+
+	/* NULL device path */
+	snprintf(str, sizeof(str), "_%pD_", NULL);
+	assert(!strcmp("_<NULL>_", str));
 #endif
 }
 
-- 
2.15.1

