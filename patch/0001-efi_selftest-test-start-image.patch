From b9872281cd8bef490da97f79126257c05c3707cc Mon Sep 17 00:00:00 2001
From: Heinrich Schuchardt <xypron.glpk@gmx.de>
Date: Tue, 2 Jan 2018 14:17:37 +0100
Subject: [PATCH 1/1] efi_selftest: test start image

Signed-off-by: Heinrich Schuchardt <xypron.glpk@gmx.de>
---
 lib/efi_selftest/Makefile                    |   1 +
 lib/efi_selftest/efi_helloworld_file_image.h | 178 +++++++++++++++++++++++++++
 lib/efi_selftest/efi_selftest_start_image.c  | 146 ++++++++++++++++++++++
 3 files changed, 325 insertions(+)
 create mode 100644 lib/efi_selftest/efi_helloworld_file_image.h
 create mode 100644 lib/efi_selftest/efi_selftest_start_image.c

diff --git a/lib/efi_selftest/Makefile b/lib/efi_selftest/Makefile
index 547e7e0098..02082976b1 100644
--- a/lib/efi_selftest/Makefile
+++ b/lib/efi_selftest/Makefile
@@ -18,6 +18,7 @@ efi_selftest_exitbootservices.o \
 efi_selftest_gop.o \
 efi_selftest_manageprotocols.o \
 efi_selftest_snp.o \
+efi_selftest_start_image.o \
 efi_selftest_textoutput.o \
 efi_selftest_tpl.o \
 efi_selftest_util.o \
diff --git a/lib/efi_selftest/efi_helloworld_file_image.h b/lib/efi_selftest/efi_helloworld_file_image.h
new file mode 100644
index 0000000000..6c476884f4
--- /dev/null
+++ b/lib/efi_selftest/efi_helloworld_file_image.h
@@ -0,0 +1,178 @@
+/*
+ *  Non-zero 8 byte strings of a disk image
+ *
+ *  Generated with tools/file2include
+ *
+ *  SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#define EFI_ST_DISK_IMG { 0x000010ee, { \
+	{0x00000000, "\x4d\x5a\x90\x00\x03\x00\x00\x00"}, /* MZ...... */ \
+	{0x00000008, "\x04\x00\x00\x00\xff\xff\x00\x00"}, /* ........ */ \
+	{0x00000010, "\xb8\x00\x00\x00\x00\x00\x00\x00"}, /* ........ */ \
+	{0x00000018, "\x40\x00\x00\x00\x00\x00\x00\x00"}, /* @....... */ \
+	{0x00000038, "\x00\x00\x00\x00\x80\x00\x00\x00"}, /* ........ */ \
+	{0x00000040, "\x0e\x1f\xba\x0e\x00\xb4\x09\xcd"}, /* ........ */ \
+	{0x00000048, "\x21\xb8\x01\x4c\xcd\x21\x54\x68"}, /* !..L.!Th */ \
+	{0x00000050, "\x69\x73\x20\x70\x72\x6f\x67\x72"}, /* is progr */ \
+	{0x00000058, "\x61\x6d\x20\x63\x61\x6e\x6e\x6f"}, /* am canno */ \
+	{0x00000060, "\x74\x20\x62\x65\x20\x72\x75\x6e"}, /* t be run */ \
+	{0x00000068, "\x20\x69\x6e\x20\x44\x4f\x53\x20"}, /*  in DOS  */ \
+	{0x00000070, "\x6d\x6f\x64\x65\x2e\x0d\x0d\x0a"}, /* mode.... */ \
+	{0x00000078, "\x24\x00\x00\x00\x00\x00\x00\x00"}, /* $....... */ \
+	{0x00000080, "\x50\x45\x00\x00\x64\x86\x06\x00"}, /* PE..d... */ \
+	{0x00000088, "\x00\x00\x00\x00\x00\x10\x00\x00"}, /* ........ */ \
+	{0x00000090, "\x09\x00\x00\x00\xf0\x00\x06\x02"}, /* ........ */ \
+	{0x00000098, "\x0b\x02\x02\x1c\x00\x02\x00\x00"}, /* ........ */ \
+	{0x000000a0, "\x00\x0a\x00\x00\x00\x00\x00\x00"}, /* ........ */ \
+	{0x000000a8, "\x00\x10\x00\x00\x00\x10\x00\x00"}, /* ........ */ \
+	{0x000000b8, "\x00\x10\x00\x00\x00\x02\x00\x00"}, /* ........ */ \
+	{0x000000d0, "\x00\x70\x00\x00\x00\x04\x00\x00"}, /* .p...... */ \
+	{0x000000d8, "\xa6\x41\x00\x00\x0a\x00\x00\x00"}, /* .A...... */ \
+	{0x00000100, "\x00\x00\x00\x00\x10\x00\x00\x00"}, /* ........ */ \
+	{0x00000130, "\x00\x50\x00\x00\x0a\x00\x00\x00"}, /* .P...... */ \
+	{0x00000188, "\x2e\x74\x65\x78\x74\x00\x00\x00"}, /* .text... */ \
+	{0x00000190, "\xbc\x01\x00\x00\x00\x10\x00\x00"}, /* ........ */ \
+	{0x00000198, "\x00\x02\x00\x00\x00\x04\x00\x00"}, /* ........ */ \
+	{0x000001a8, "\x00\x00\x00\x00\x20\x00\x30\x60"}, /* .... .0` */ \
+	{0x000001b0, "\x2e\x73\x64\x61\x74\x61\x00\x00"}, /* .sdata.. */ \
+	{0x000001b8, "\x0c\x00\x00\x00\x00\x20\x00\x00"}, /* ..... .. */ \
+	{0x000001c0, "\x00\x02\x00\x00\x00\x06\x00\x00"}, /* ........ */ \
+	{0x000001d0, "\x00\x00\x00\x00\x40\x00\x30\xc0"}, /* ....@.0. */ \
+	{0x000001d8, "\x2e\x64\x61\x74\x61\x00\x00\x00"}, /* .data... */ \
+	{0x000001e0, "\xb0\x00\x00\x00\x00\x30\x00\x00"}, /* .....0.. */ \
+	{0x000001e8, "\x00\x02\x00\x00\x00\x08\x00\x00"}, /* ........ */ \
+	{0x000001f8, "\x00\x00\x00\x00\x40\x00\x30\xc0"}, /* ....@.0. */ \
+	{0x00000200, "\x2e\x64\x79\x6e\x61\x6d\x69\x63"}, /* .dynamic */ \
+	{0x00000208, "\x68\x00\x00\x00\x00\x40\x00\x00"}, /* h....@.. */ \
+	{0x00000210, "\x00\x02\x00\x00\x00\x0a\x00\x00"}, /* ........ */ \
+	{0x00000220, "\x00\x00\x00\x00\x40\x00\x30\xc0"}, /* ....@.0. */ \
+	{0x00000228, "\x2e\x72\x65\x6c\x6f\x63\x00\x00"}, /* .reloc.. */ \
+	{0x00000230, "\x0a\x00\x00\x00\x00\x50\x00\x00"}, /* .....P.. */ \
+	{0x00000238, "\x00\x02\x00\x00\x00\x0c\x00\x00"}, /* ........ */ \
+	{0x00000248, "\x00\x00\x00\x00\x40\x00\x10\x42"}, /* ....@..B */ \
+	{0x00000250, "\x2e\x64\x79\x6e\x73\x79\x6d\x00"}, /* .dynsym. */ \
+	{0x00000258, "\x30\x00\x00\x00\x00\x60\x00\x00"}, /* 0....`.. */ \
+	{0x00000260, "\x00\x02\x00\x00\x00\x0e\x00\x00"}, /* ........ */ \
+	{0x00000270, "\x00\x00\x00\x00\x40\x00\x30\x40"}, /* ....@.0@ */ \
+	{0x00000400, "\x55\x89\xe5\xff\x75\x0c\xff\x75"}, /* U...u..u */ \
+	{0x00000408, "\x08\xe8\x00\x00\x00\x00\x58\x89"}, /* ......X. */ \
+	{0x00000410, "\xc3\x05\xf2\xef\xff\xff\x81\xc3"}, /* ........ */ \
+	{0x00000418, "\xf2\x2f\x00\x00\x53\x50\xe8\x35"}, /* ./..SP.5 */ \
+	{0x00000420, "\x01\x00\x00\x5b\x5b\x85\xc0\x75"}, /* ...[[..u */ \
+	{0x00000428, "\x05\xe8\x02\x00\x00\x00\xc9\xc3"}, /* ........ */ \
+	{0x00000430, "\x53\x83\xec\x18\xe8\x1b\x01\x00"}, /* S....... */ \
+	{0x00000438, "\x00\x81\xc3\xc7\x0f\x00\x00\x8b"}, /* ........ */ \
+	{0x00000440, "\x44\x24\x24\x8b\x40\x2c\x89\x44"}, /* D$$.@,.D */ \
+	{0x00000448, "\x24\x0c\x8b\x44\x24\x24\x8b\x40"}, /* $..D$$.@ */ \
+	{0x00000450, "\x3c\x89\x44\x24\x08\x8b\x44\x24"}, /* <.D$..D$ */ \
+	{0x00000458, "\x0c\x8b\x40\x04\x83\xec\x08\x8d"}, /* ..@..... */ \
+	{0x00000460, "\x93\x10\x10\x00\x00\x52\xff\x74"}, /* .....R.t */ \
+	{0x00000468, "\x24\x18\xff\xd0\x83\xc4\x10\x8b"}, /* $....... */ \
+	{0x00000470, "\x44\x24\x08\x8b\x40\x58\x83\xec"}, /* D$..@X.. */ \
+	{0x00000478, "\x04\x8d\x54\x24\x04\x52\x8d\x93"}, /* ..T$.R.. */ \
+	{0x00000480, "\x00\x10\x00\x00\x52\xff\x74\x24"}, /* ....R.t$ */ \
+	{0x00000488, "\x2c\xff\xd0\x83\xc4\x10\x89\x44"}, /* ,......D */ \
+	{0x00000490, "\x24\x04\x83\x7c\x24\x04\x00\x74"}, /* $..|$..t */ \
+	{0x00000498, "\x1c\x8b\x44\x24\x0c\x8b\x40\x04"}, /* ..D$..@. */ \
+	{0x000004a0, "\x83\xec\x08\x8d\x93\x30\x10\x00"}, /* .....0.. */ \
+	{0x000004a8, "\x00\x52\xff\x74\x24\x18\xff\xd0"}, /* .R.t$... */ \
+	{0x000004b0, "\x83\xc4\x10\xeb\x7e\x8b\x44\x24"}, /* ....~.D$ */ \
+	{0x000004b8, "\x0c\x8b\x40\x04\x83\xec\x08\x8d"}, /* ..@..... */ \
+	{0x000004c0, "\x93\x76\x10\x00\x00\x52\xff\x74"}, /* .v...R.t */ \
+	{0x000004c8, "\x24\x18\xff\xd0\x83\xc4\x10\x8b"}, /* $....... */ \
+	{0x000004d0, "\x04\x24\x8b\x40\x18\x85\xc0\x74"}, /* .$.@...t */ \
+	{0x000004d8, "\x26\x8b\x04\x24\x8b\x40\x1c\x85"}, /* &..$.@.. */ \
+	{0x000004e0, "\xc0\x74\x1c\x8b\x44\x24\x0c\x8b"}, /* .t..D$.. */ \
+	{0x000004e8, "\x40\x04\x8b\x14\x24\x8b\x52\x1c"}, /* @...$.R. */ \
+	{0x000004f0, "\x83\xec\x08\x52\xff\x74\x24\x18"}, /* ...R.t$. */ \
+	{0x000004f8, "\xff\xd0\x83\xc4\x10\xeb\x1a\x8b"}, /* ........ */ \
+	{0x00000500, "\x44\x24\x0c\x8b\x40\x04\x83\xec"}, /* D$..@... */ \
+	{0x00000508, "\x08\x8d\x93\x94\x10\x00\x00\x52"}, /* .......R */ \
+	{0x00000510, "\xff\x74\x24\x18\xff\xd0\x83\xc4"}, /* .t$..... */ \
+	{0x00000518, "\x10\x8b\x44\x24\x0c\x8b\x40\x04"}, /* ..D$..@. */ \
+	{0x00000520, "\x83\xec\x08\x8d\x93\xa2\x10\x00"}, /* ........ */ \
+	{0x00000528, "\x00\x52\xff\x74\x24\x18\xff\xd0"}, /* .R.t$... */ \
+	{0x00000530, "\x83\xc4\x10\x8b\x44\x24\x08\x8b"}, /* ....D$.. */ \
+	{0x00000538, "\x40\x78\x6a\x00\x6a\x00\xff\x74"}, /* @xj.j..t */ \
+	{0x00000540, "\x24\x0c\xff\x74\x24\x2c\xff\xd0"}, /* $..t$,.. */ \
+	{0x00000548, "\x83\xc4\x10\x8b\x44\x24\x04\x83"}, /* ....D$.. */ \
+	{0x00000550, "\xc4\x18\x5b\xc3\x8b\x1c\x24\xc3"}, /* ..[...$. */ \
+	{0x00000558, "\x57\x56\x53\x89\xc7\x83\xc2\x04"}, /* WVS..... */ \
+	{0x00000560, "\x31\xc9\x31\xdb\x31\xf6\x8b\x42"}, /* 1.1.1..B */ \
+	{0x00000568, "\xfc\x85\xc0\x74\x20\x83\xf8\x12"}, /* ...t ... */ \
+	{0x00000570, "\x74\x10\x83\xf8\x13\x74\x0f\x83"}, /* t....t.. */ \
+	{0x00000578, "\xf8\x11\x75\x0c\x8b\x0a\x01\xf9"}, /* ..u..... */ \
+	{0x00000580, "\xeb\x06\x8b\x32\xeb\x02\x8b\x1a"}, /* ...2.... */ \
+	{0x00000588, "\x83\xc2\x08\xeb\xd9\xb8\x01\x00"}, /* ........ */ \
+	{0x00000590, "\x00\x80\x85\xc9\x75\x08\x85\xdb"}, /* ....u... */ \
+	{0x00000598, "\x75\x1e\x31\xc0\xeb\x1a\x85\xdb"}, /* u.1..... */ \
+	{0x000005a0, "\x74\x16\x85\xf6\x7e\xf4\x80\x79"}, /* t...~..y */ \
+	{0x000005a8, "\x04\x08\x75\x06\x8b\x01\x01\xf8"}, /* ..u..... */ \
+	{0x000005b0, "\x01\x38\x01\xd9\x29\xde\xeb\xea"}, /* .8..)... */ \
+	{0x000005b8, "\x5b\x5e\x5f\xc3\x00\x00\x00\x00"}, /* [^_..... */ \
+	{0x00000600, "\x00\x40\x00\x00\x00\x00\x00\x00"}, /* .@...... */ \
+	{0x00000800, "\xa1\x31\x1b\x5b\x62\x95\xd2\x11"}, /* .1.[b... */ \
+	{0x00000808, "\x8e\x3f\x00\xa0\xc9\x69\x72\x3b"}, /* .?...ir; */ \
+	{0x00000810, "\x48\x00\x65\x00\x6c\x00\x6c\x00"}, /* H.e.l.l. */ \
+	{0x00000818, "\x6f\x00\x2c\x00\x20\x00\x77\x00"}, /* o.,. .w. */ \
+	{0x00000820, "\x6f\x00\x72\x00\x6c\x00\x64\x00"}, /* o.r.l.d. */ \
+	{0x00000828, "\x21\x00\x0a\x00\x00\x00\x00\x00"}, /* !....... */ \
+	{0x00000830, "\x43\x00\x61\x00\x6e\x00\x6e\x00"}, /* C.a.n.n. */ \
+	{0x00000838, "\x6f\x00\x74\x00\x20\x00\x6f\x00"}, /* o.t. .o. */ \
+	{0x00000840, "\x70\x00\x65\x00\x6e\x00\x20\x00"}, /* p.e.n. . */ \
+	{0x00000848, "\x6c\x00\x6f\x00\x61\x00\x64\x00"}, /* l.o.a.d. */ \
+	{0x00000850, "\x65\x00\x64\x00\x20\x00\x69\x00"}, /* e.d. .i. */ \
+	{0x00000858, "\x6d\x00\x61\x00\x67\x00\x65\x00"}, /* m.a.g.e. */ \
+	{0x00000860, "\x20\x00\x70\x00\x72\x00\x6f\x00"}, /*  .p.r.o. */ \
+	{0x00000868, "\x74\x00\x6f\x00\x63\x00\x6f\x00"}, /* t.o.c.o. */ \
+	{0x00000870, "\x6c\x00\x0a\x00\x00\x00\x4c\x00"}, /* l.....L. */ \
+	{0x00000878, "\x6f\x00\x61\x00\x64\x00\x20\x00"}, /* o.a.d. . */ \
+	{0x00000880, "\x6f\x00\x70\x00\x74\x00\x69\x00"}, /* o.p.t.i. */ \
+	{0x00000888, "\x6f\x00\x6e\x00\x73\x00\x3a\x00"}, /* o.n.s.:. */ \
+	{0x00000890, "\x20\x00\x00\x00\x3c\x00\x6e\x00"}, /*  ...<.n. */ \
+	{0x00000898, "\x6f\x00\x6e\x00\x65\x00\x3e\x00"}, /* o.n.e.>. */ \
+	{0x000008a0, "\x00\x00\x0a\x00\x00\x00\x00\x00"}, /* ........ */ \
+	{0x00000a00, "\x10\x00\x00\x00\x00\x00\x00\x00"}, /* ........ */ \
+	{0x00000a08, "\x04\x00\x00\x00\x00\x00\x00\x00"}, /* ........ */ \
+	{0x00000a10, "\x05\x00\x00\x00\x00\x70\x00\x00"}, /* .....p.. */ \
+	{0x00000a18, "\x06\x00\x00\x00\x00\x60\x00\x00"}, /* .....`.. */ \
+	{0x00000a20, "\x0a\x00\x00\x00\x13\x00\x00\x00"}, /* ........ */ \
+	{0x00000a28, "\x0b\x00\x00\x00\x10\x00\x00\x00"}, /* ........ */ \
+	{0x00000a30, "\x1e\x00\x00\x00\x02\x00\x00\x00"}, /* ........ */ \
+	{0x00000c00, "\xa6\x30\x00\x00\x0a\x00\x00\x00"}, /* .0...... */ \
+	{0x00000e10, "\x01\x00\x00\x00\x00\x10\x00\x00"}, /* ........ */ \
+	{0x00000e18, "\x00\x00\x00\x00\x10\x00\x02\x00"}, /* ........ */ \
+	{0x00000e20, "\x08\x00\x00\x00\x00\x00\x00\x00"}, /* ........ */ \
+	{0x00000e28, "\x00\x00\x00\x00\x10\x00\x01\x00"}, /* ........ */ \
+	{0x00001000, "\x00\x00\x00\x00\x04\x00\x00\x00"}, /* ........ */ \
+	{0x00001008, "\x00\x00\x00\x00\x03\x00\x00\x00"}, /* ........ */ \
+	{0x00001010, "\x03\x00\x2e\x65\x78\x69\x74\x00"}, /* ...exit. */ \
+	{0x00001018, "\x00\x00\x2e\x00\x00\x00\x01\x00"}, /* ........ */ \
+	{0x00001020, "\x00\x00\x03\x00\x64\x75\x6d\x6d"}, /* ....dumm */ \
+	{0x00001028, "\x79\x00\x00\x00\xa6\x00\x00\x00"}, /* y....... */ \
+	{0x00001030, "\x03\x00\x00\x00\x03\x00\x5f\x44"}, /* ......_D */ \
+	{0x00001038, "\x59\x4e\x41\x4d\x49\x43\x00\x00"}, /* YNAMIC.. */ \
+	{0x00001040, "\x00\x00\x04\x00\x00\x00\x03\x00"}, /* ........ */ \
+	{0x00001048, "\x65\x66\x69\x5f\x6d\x61\x69\x6e"}, /* efi_main */ \
+	{0x00001050, "\x30\x00\x00\x00\x01\x00\x00\x00"}, /* 0....... */ \
+	{0x00001058, "\x03\x00\x00\x00\x00\x00\x16\x00"}, /* ........ */ \
+	{0x00001060, "\x00\x00\x58\x01\x00\x00\x01\x00"}, /* ..X..... */ \
+	{0x00001068, "\x00\x00\x03\x00\x00\x00\x00\x00"}, /* ........ */ \
+	{0x00001070, "\x20\x00\x00\x00\x54\x01\x00\x00"}, /*  ...T... */ \
+	{0x00001078, "\x01\x00\x00\x00\x03\x00\x00\x00"}, /* ........ */ \
+	{0x00001080, "\x00\x00\x36\x00\x00\x00\x00\x00"}, /* ..6..... */ \
+	{0x00001088, "\x00\x00\x02\x00\x00\x00\x03\x00"}, /* ........ */ \
+	{0x00001090, "\x5f\x73\x74\x61\x72\x74\x00\x00"}, /* _start.. */ \
+	{0x00001098, "\x00\x00\x00\x00\x01\x00\x00\x00"}, /* ........ */ \
+	{0x000010a0, "\x02\x00\x4c\x00\x00\x00\x6c\x6f"}, /* ..L...lo */ \
+	{0x000010a8, "\x61\x64\x65\x64\x5f\x69\x6d\x61"}, /* aded_ima */ \
+	{0x000010b0, "\x67\x65\x5f\x67\x75\x69\x64\x00"}, /* ge_guid. */ \
+	{0x000010b8, "\x5f\x72\x65\x6c\x6f\x63\x61\x74"}, /* _relocat */ \
+	{0x000010c0, "\x65\x00\x5f\x5f\x78\x38\x36\x2e"}, /* e.__x86. */ \
+	{0x000010c8, "\x67\x65\x74\x5f\x70\x63\x5f\x74"}, /* get_pc_t */ \
+	{0x000010d0, "\x68\x75\x6e\x6b\x2e\x62\x78\x00"}, /* hunk.bx. */ \
+	{0x000010d8, "\x5f\x47\x4c\x4f\x42\x41\x4c\x5f"}, /* _GLOBAL_ */ \
+	{0x000010e0, "\x4f\x46\x46\x53\x45\x54\x5f\x54"}, /* OFFSET_T */ \
+	{0x000010e8, "\x41\x42\x4c\x45\x5f\x00"}, /* ABLE_. */ \
+	{0, NULL} } }
diff --git a/lib/efi_selftest/efi_selftest_start_image.c b/lib/efi_selftest/efi_selftest_start_image.c
new file mode 100644
index 0000000000..ad69201690
--- /dev/null
+++ b/lib/efi_selftest/efi_selftest_start_image.c
@@ -0,0 +1,146 @@
+/*
+ * efi_selftest_block
+ *
+ * Copyright (c) 2017 Heinrich Schuchardt <xypron.glpk@gmx.de>
+ *
+ * SPDX-License-Identifier:     GPL-2.0+
+ *
+ * This test checks the driver for block IO devices.
+ * A disk image is created in memory.
+ * A handle is created for the new block IO device.
+ * The block I/O protocol is installed on the handle.
+ * ConnectController is used to setup partitions and to install the simple
+ * file protocol.
+ * A known file is read from the file system and verified.
+ */
+
+#include <efi_selftest.h>
+#include "efi_helloworld_file_image.h"
+
+/* Block size of compressed disk image */
+#define COMPRESSED_DISK_IMAGE_BLOCK_SIZE 8
+
+/* Binary logarithm of the block size */
+#define LB_BLOCK_SIZE 9
+
+static efi_handle_t image_handle;
+static struct efi_boot_services *boottime;
+
+/* One 8 byte block of the compressed disk image */
+struct line {
+	size_t addr;
+	char *line;
+};
+
+/* Compressed disk image */
+struct compressed_disk_image {
+	size_t length;
+	struct line lines[];
+};
+
+static struct compressed_disk_image img = EFI_ST_DISK_IMG;
+
+/* Decompressed file image */
+static u8 *image;
+
+/*
+ * Decompress the disk image.
+ *
+ * @image	decompressed disk image
+ * @return	status code
+ */
+static efi_status_t decompress(u8 **image)
+{
+	u8 *buf;
+	size_t i;
+	size_t addr;
+	size_t len;
+	efi_status_t ret;
+
+	ret = boottime->allocate_pool(EFI_LOADER_DATA, img.length,
+				      (void **)&buf);
+	if (ret != EFI_SUCCESS) {
+		efi_st_error("Out of memory\n");
+		return ret;
+	}
+	boottime->set_mem(buf, img.length, 0);
+
+	for (i = 0; ; ++i) {
+		if (!img.lines[i].line)
+			break;
+		addr = img.lines[i].addr;
+		len = COMPRESSED_DISK_IMAGE_BLOCK_SIZE;
+		if (addr + len > img.length)
+			len = img.length - addr;
+		boottime->copy_mem(buf + addr, img.lines[i].line, len);
+	}
+	*image = buf;
+	return ret;
+}
+
+/*
+ * Setup unit test.
+ *
+ * @handle:	handle of the loaded image
+ * @systable:	system table
+ * @return:	EFI_ST_SUCCESS for success
+ */
+static int setup(const efi_handle_t handle,
+		 const struct efi_system_table *systable)
+{
+	image_handle = handle;
+	boottime = systable->boottime;
+
+	decompress(&image);
+
+	return EFI_ST_SUCCESS;
+}
+
+/*
+ * Tear down unit test.
+ *
+ * @return:	EFI_ST_SUCCESS for success
+ */
+static int teardown(void)
+{
+	efi_status_t r = EFI_ST_SUCCESS;
+
+	if (image) {
+		r = efi_free_pool(image);
+		if (r != EFI_SUCCESS) {
+			efi_st_error("Failed to free image\n");
+			return EFI_ST_FAILURE;
+		}
+	}
+	return r;
+}
+
+/*
+ * Execute unit test.
+ *
+ * @return:	EFI_ST_SUCCESS for success
+ */
+static int execute(void)
+{
+	efi_status_t ret;
+	efi_handle_t handle;
+
+	ret = boottime->load_image(false, image_handle, NULL, image,
+				   img.length, &handle);
+	if (ret != EFI_SUCCESS) {
+		efi_st_error("Failed to load image\n");
+		return EFI_ST_FAILURE;
+	}
+	ret = boottime->start_image(handle, NULL, NULL);
+
+	return EFI_ST_SUCCESS;
+}
+
+EFI_UNIT_TEST(startimage) = {
+	.name = "start image",
+	.phase = EFI_EXECUTE_BEFORE_BOOTTIME_EXIT,
+	.setup = setup,
+	.execute = execute,
+	.teardown = teardown,
+	.on_request = true,
+};
-- 
2.14.2

